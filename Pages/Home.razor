@page "/"
@* @using MudBlazor *@
@using Subscriptions.Web.Requests
@inject SubscriptionService subscriptionService
@inject ILogger<SubscriptionService> logger

<PageTitle>Subscription Manager</PageTitle>

<h1>Welcome to Subscription Manager</h1>

<p><strong>The @_message!</strong></p>
@if (subscriptionTypes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th colspan="5" style="text-align:center;">Subscription Types</th>
        </tr>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th style="text-align:center;">Price Monthly</th>
            <th style="text-align:center;">Price Yearly</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var subscriptionType in subscriptionTypes)
        {
            <tr>
                <td>@subscriptionType.Id</td>
                <td>@subscriptionType.Name</td>
                <td>@subscriptionType.Description</td>
                <td style="text-align:center;">@subscriptionType.PriceMonthly.ToString("C")</td>
                <td style="text-align:center;">@subscriptionType.PriceYearly.ToString("C")</td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    private string? _message = string.Empty;
    private IEnumerable<SubscriptionType>? subscriptionTypes;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _message = await subscriptionService.TestServerApi();
            subscriptionTypes = await subscriptionService.GetSubscriptionTypesAsync();
        }
        catch (TaskCanceledException ex)
        {
            logger.LogWarning(ex, "Request was canceled");
            Console.WriteLine("Request was canceled: " + ex.Message);
        }
        catch (HttpRequestException ex)
        {
            logger.LogError(ex, "Request error");
            Console.WriteLine("Request error: " + ex.Message);
        }
        catch (Exception ex)
        {
            logger.LogError(ex, "An error occurred");
            _message = ex.Message;
        }
    }
}
